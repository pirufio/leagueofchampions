


@model LeagueOfChampios.Models.UserProfile
@using BootstrapSupport;


@{
    ViewBag.Title = "Details";

}

<h2>Details</h2>




@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>UserProfile</legend>


         @Html.BeginControlGroupFor(model=>model.UserName)

            @Html.LabelFor(model => model.UserName,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.UserName,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.UserName,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.Email)

            @Html.LabelFor(model => model.Email,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.Email,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.Email,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.Address)

            @Html.LabelFor(model => model.Address,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.Address,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.Address,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.City)

            @Html.LabelFor(model => model.City,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.City,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.City,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.State)

            @Html.LabelFor(model => model.State,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.State,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.State,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.Country)

            @Html.LabelFor(model => model.Country,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.Country,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.Country,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


         @Html.BeginControlGroupFor(model=>model.Picture)

            @Html.LabelFor(model => model.Picture,new {@class="control-label"})

        
        <div class="controls">

            @Html.LabelFor(model => model.Picture,new {@class="input-xlarge"})

            @Html.ValidationMessageFor(model => model.Picture,null,new{@class="help-inline"})
		</div>
        @Html.EndControlGroup()


		<div class="form-actions">
            <button type="submit" class="btn btn-primary">Save changes</button>
            <button class="btn">Cancel</button>
          </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    
}



